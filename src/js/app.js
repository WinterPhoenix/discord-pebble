var UI = require('ui');
var Voice = require('ui/voice');
var Settings = require('settings');
var Clay = require('clay');
var clayConfig = require('config');
var clay = new Clay(clayConfig, null, {autoHandleEvents: false});
var ajax = require('ajax');

var token = "";
var contacts = [];

var configPromptCard = new UI.Card({
	fullscreen: false,
	title: 'Configure on phone',
	titleColor: 'black'
});

var errorCard = new UI.Card({
	fullscreen: false,
	title: 'Something went wrong:',
	subtitle: 'Check that your token is correct!',
	titleColor: 'black',
	backgroundColor: 'yellow',
});

var loadingCard = new UI.Card({
	fullscreen: false,
	title: 'Getting DMs...',
	titleColor: 'black',
});

var sendingMessageCard = new UI.Card({
	fullscreen: false,
	title: 'Sending message...',
	titleColor: 'black',
	backgroundColor: '#aaaaaa',
});

var sentMessageCard = new UI.Card({
	fullscreen: false,
	title: 'Sent!',
	titleColor: 'black',
	backgroundColor: '#aaaaaa',
});

var contactsMenu = new UI.Menu({
	fullscreen:false,
	backgroundColor: 'white',
	textColor: 'black',
	highlightBackgroundColor: 'liberty',
	highlightTextColor: 'black',
});

Pebble.addEventListener('showConfiguration', function(e) {
	Pebble.openURL(clay.generateUrl());
	console.log('showed settings');
});

function populateContactsMenu(arrayContacts){
	for(var i = 0; i < arrayContacts.length; i++){
		var contact = arrayContacts[i];

		var name = "";

		if(contact.name){
			name = contact.name;
		}else{
			var lastIndex = contact.recipients.length - 1;
			for(var j = 0; j < contact.recipients.length; j++){
				name += contact.recipients[j].username;
				if(j < lastIndex){
					name += ", ";
				}
			}
		}

		if(contacts[i]) {
			contactsMenu.item(0, i, { title: name });
		}
	}
};

function getContacts(arrayContacts, token){
	console.log('getting contacts');

	loadingCard.show();

	var ajaxURL = 'https://discord.com/api/users/@me/channels';
	var ajaxHeaders = { 'Authorization' : Settings.option('token')};
	var ajaxParams = { url: ajaxURL, type: 'json', method: 'get', headers: ajaxHeaders };

	ajax(ajaxParams, function(data){
		console.log('getting contacts succeeded!');
		contacts = data;

		// sort contacts based on who messaged last
		contacts.sort(function(a, b){

			//using last_message_id, we can derive time the last message was sent
			//as discord tokens are partially generated by timestamp
			sA = 0;
			if(a.last_message_id) {
				var str = parseInt(a.last_message_id).toString(2);
				sA = parseInt(str.substring(0, 42 - 64 + str.length), 2);
			}
			sB = 0;
			if(b.last_message_id) {
				var str = parseInt(b.last_message_id).toString(2);
				sB = parseInt(str.substring(0, 42 - 64 + str.length), 2);
			}

			return sB - sA;
		});

		populateContactsMenu(contacts);
		contactsMenu.show();
	}, function(data){
		console.log('getting contacts failed' + JSON.stringify(data) );
		errorCard.body = "" + data;
		errorCard.show();
	});
}

Pebble.addEventListener('webviewclosed', function(e) {
	if (e && !e.response) {
		console.log('something went wrong');
		return;
	}

	var dict = clay.getSettings(e.response);
	Settings.option(dict);
	Settings.option('token', Settings.option('token').replace(/['"]+/g, ''));
	token = Settings.option('token');
	console.log('set settings');

	getContacts(contacts, token);
});

token = Settings.option('token');

getContacts(contacts, token);

contactsMenu.on('select', function(selection){
	var selectedContact = contacts[selection.itemIndex];

	console.log('transcribing');

	Voice.dictate('start', true, function(input) {
		if (input.err) {
			console.log('Error: ' + input.err);
			sendingMessageCard.hide();
			return;
		}

		console.log('sending message');

		var ajaxURL = 'https://discordapp.com/api/channels/' + selectedContact.id + '/messages';
		var ajaxHeaders = { 'Authorization' : token };
		var ajaxData = { 'content' : input.transcription };
		var ajaxParams = { url: ajaxURL, type: 'json',
			method: 'post', data: ajaxData, headers: ajaxHeaders };

		ajax(ajaxParams, function(data){
			console.log('message sent!');
			sentMessageCard.show();
		}, function(data){
			console.log('sending message failed' + JSON.stringify(data) );
			errorCard.body = "" + data;
			errorCard.show();
		});
	});

	sendingMessageCard.show();
});

errorCard.on('show', function(){
	loadingCard.hide();
	contactsMenu.hide();
	sendingMessageCard.hide();
});

loadingCard.on('show', function(){
	configPromptCard.hide();
});

contactsMenu.on('show', function(){
	loadingCard.hide();
});

sentMessageCard.on('show', function(){
	contactsMenu.hide();
	sendingMessageCard.hide();

	setTimeout(function() {
		sentMessageCard.hide();
	}, 1000);
});

// var ws = new WebSocket("wss://gateway.discord.gg/?encoding=json&v=7");
//
// ws.addEventListener('open', function (event) {
// 	console.log("Connected!");
// });
//
// ws.addEventListener('message', function (event) {
// 	var data = JSON.parse(event.data);
//
// 	if(data.t === "READY"){
// 		console.log("Ready!");
// 		serverMenu.show();
// 		loadingCard.hide();
// 		if(!isABot){
// 			console.log(JSON.stringify(data.d.guilds));
// 			servers = data.d.guilds;
// 			dmChannels = data.d.private_channels;
// 			serverMenu.item(0, 0, {title: "Messages", subtitle: "Direct messages"});
// 			for(var i = 0; i < servers.length; i++){
// 				serverMenu.item(1, i, {title: data.d.guilds[i].name});
// 			}
// 		}
// 	}
//
// 	if(data.t === "MESSAGE_CREATE"){
// 		setTimeout(function(){
// 			console.log("New Message! Currently in chat list: " + inChatList);
// 			if(data.d.channel_id == selectedChannel && inChatList){
// 				Motor.vibrate('short');
// 				messages.unshift(data.d);
// 				var cardBody = "";
// 				chatList.title(messages[0].author.username + ":");
// 				chatList.subtitle(messages[0].content);
// 				for(var i = 1; i < messages.length; i++)
// 					cardBody += messages[i].author.username + ":\n" + messages[i].content + "\n";
// 				if(cardBody.length > 433 - messages[0].author.username.length - messages[0].content.length);
// 				chatList.body(cardBody.substring(0, 410 - messages[0].author.username.length - messages[0].content.length) + "...");
// 				console.log("Length of chat card: " + (410 - messages[0].author.username.length - messages[0].content.length + 3));
// 			}
// 		}, 500);
// 	}
//
// 	if(data.t === "GUILD_CREATE" && isABot){
// 		console.log("Got Server: " + data.d.name);
// 		serverMenu.item(0, servers.length, {title: data.d.name});
// 		servers.push(data.d);
// 	}
// 	console.log(event.data);
// 	console.log(JSON.stringify(event));
// 	if(data.op === 10){
// 		console.log("Heartbeat: " + data.d.heartbeat_interval);
// 		console.log("Sent Auth!");
// 		ws.send(JSON.stringify({
// 			"op": 2,
// 			"d": {
// 				"token": token,
// 				"properties": {
// 					"$browser": "pebble",
// 				},
// 				"large_threshold": 50,
// 			}
// 		}));
//
// 		setInterval(function(){
// 			console.log("Sent heartbeat!");
// 			ws.send(JSON.stringify({"op": 1, "d":null}));
// 		}, data.d.heartbeat_interval - 500);
// 	}
// });
